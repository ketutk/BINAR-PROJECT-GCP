openapi: 3.0.1
info:
  title: NGEFLY.COM
  description: API Documentation for NGEFLY.COM
  version: 1.0.1
  contact:
    email: adewanggan@gmail.com
servers:
  - url: http://localhost:3000/api/v1
  - url: https://binar-project-backend-staging.vercel.app/api/v1
tags:
  - name: Auth
    description: Everything about your Authentication
  - name: Profile
    description: Everything about your Profile
  - name: Notification
    description: Everything about your Notification
  - name: Tax
    description: Everything about your Tax
  - name: Category
    description: Everything about your Category
paths:
  /auth/register:
    post:
      tags:
        - "Auth"
      summary: Register
      description: Register a new account into the database for access
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: dewangga
                email:
                  type: string
                  example: dewangga@gmail.com
                password:
                  type: string
                  example: "12345"

      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully created account
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: a9bc30c4-9408-454b-8815-92ee6cbf46d7
                          name:
                            type: string
                            example: dewangga
                          email:
                            type: string
                            example: dewangga@gmail.com
                          is_verified:
                            type: boolean
                            example: false
                          role:
                            type: string
                            example: USER
                          createdAt:
                            type: string
                            format: datetime
                            example: "2024-05-22T04:05:11.993Z"
                          updatedAt:
                            type: string
                            format: datetime
                            example: "2024-05-22T04:05:11.993Z"

        400:
          description: Input must be required
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Missing required field
                  data:
                    example: ~

        409:
          description: Email has already been used!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email already used
                  data:
                    example: ~

  /auth/verify/send:
    post:
      tags:
        - "Auth"
      summary: Verify Send
      description: Send an Email to Verify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: dumpfile978@gmail.com

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Mail sent. Please check your email
                  data:
                    example: ~

        404:
          description: Account not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Account not found.
                  data:
                    example: ~

        409:
          description: Account already verified.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Account already verified.
                  data:
                    example: ~

  /auth/login:
    post:
      tags:
        - "Auth"
      summary: Login
      description: Login account to request a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@user.com
                password:
                  type: string
                  example: "user123"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User logged in success
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 5a33647a-4f3d-4287-aba1-650b92a7a253
                      name:
                        type: string
                        example: Admin
                      email:
                        type: string
                        example: admin@admin.com
                      is_verified:
                        type: boolean
                        example: true
                      role:
                        type: string
                        example: ADMIN
                      createdAt:
                        type: string
                        format: datetime
                        example: "2024-05-22T04:03:20.510Z"
                      updatedAt:
                        type: string
                        format: datetime
                        example: "2024-05-22T04:03:20.510Z"
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVhMzM2NDdhLTRmM2QtNDI4Ny1hYmExLTY1MGI5MmE3YTI1MyIsIm5hbWUiOiJBZG1pbiIsImVtYWlsIjoiYWRtaW5AYWRtaW4uY29tIiwiaXNfdmVyaWZpZWQiOnRydWUsInJvbGUiOiJBRE1JTiIsImNyZWF0ZWRBdCI6IjIwMjQtMDUtMjJUMDQ6MDM6MjAuNTEwWiIsInVwZGF0ZWRBdCI6IjIwMjQtMDUtMjJUMDQ6MDM6MjAuNTEwWiIsImlhdCI6MTcxNjM1NzMxMH0.DX5JBe_qs5gD2jwzcSUAOEdpYxal0PZafYIhFEeV5Uc

        400:
          description: Input must be required
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    anyOf:
                      - type: string
                        example: Missing required field
                      - type: string
                        example: Invalid password.
                  data:
                    example: ~

        401:
          description: Account is not verified yet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Account is not verified yet.
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: a9bc30c4-9408-454b-8815-92ee6cbf46d7
                          name:
                            type: string
                            example: dewangga
                          email:
                            type: string
                            example: dewangga@gmail.com
                          is_verified:
                            type: boolean
                            example: false
                          role:
                            type: string
                            example: USER
                          createdAt:
                            type: string
                            format: datetime
                            example: "2024-05-22T04:05:11.993Z"
                          updatedAt:
                            type: string
                            format: datetime
                            example: "2024-05-22T04:05:11.993Z"

        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Account not found.
                  data:
                    example: ~

  /auth/forgotpassword:
    post:
      tags:
        - "Auth"
      summary: Forget Password
      description: Send Email to Forget a Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hamadakinose@gmail.com

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Link reset password has been sent to your email. Please check your email!
                  data:
                    example: ~

        404:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email not registered!
                  data:
                    example: ~

  /auth/resetpassword/{token}:
    post:
      tags:
        - "Auth"
      summary: Reset Password
      description: Send Email
      parameters:
        - schema:
            type: string
          name: token
          in: path
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "123"
                confirm:
                  type: string
                  example: "123"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password successfull has been reset
                  data:
                    example: ~

        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    anyOf:
                      - type: string
                        example: Invalid Token
                      - type: string
                        example: Password doesnt match
                  data:
                    example: ~

        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid Token
                  data:
                    example: ~

  /auth/verify/{token}:
    put:
      tags:
        - "Auth"
      summary: Verify
      description: Verify
      parameters:
        - schema:
            type: string
          name: token
          in: path
          required: true

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Verify Success. You're account is now verified
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: a9bc30c4-9408-454b-8815-92ee6cbf46d7
                          name:
                            type: string
                            example: dewangga
                          email:
                            type: string
                            example: dewangga@gmail.com
                          is_verified:
                            type: boolean
                            example: false
                          role:
                            type: string
                            example: USER
                          createdAt:
                            type: string
                            format: datetime
                            example: "2024-05-22T04:05:11.993Z"
                          updatedAt:
                            type: string
                            format: datetime
                            example: "2024-05-22T04:05:11.993Z"

                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNlNTEyMmUyLWJjYzktNDRiOC1iMzg3LTUxYjMwY2JiMmM4ZiIsIm5hbWUiOiJkZXdhbmdnYSIsImVtYWlsIjoiZHVtcGZpbGU5NzhAZ21haWwuY29tIiwicGFzc3dvcmQiOiIkMmIkMTAkS1Z6YjlPM3o1V09PQmJqWE9oWTFVT2tlRk51VHNVaUU3UXB5YnduckdKVmlFNjdTb2hTUG0iLCJpc192ZXJpZmllZCI6ZmFsc2UsInJvbGUiOiJVU0VSIiwiY3JlYXRlZEF0IjoiMjAyNC0wNS0yMlQxNDo1NDo0NC4wMzNaIiwidXBkYXRlZEF0IjoiMjAyNC0wNS0yMlQxNDo1NDo0NC4wMzNaIiwidmVyaWZ5Ijp0cnVlLCJpYXQiOjE3MTYzODk2ODksImV4cCI6MTcxNjM5MDU4OX0.CnFBZ2SXn1zABkC0eP_whplhmmmFlFOAGCoowIN7KD4

        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    anyOf:
                      - type: string
                        example: Invalid verify email token.
                      - type: string
                        example: Invalid token
                  data:
                    example: ~

  /profile/{user_id}:
    get:
      tags:
        - "Profile"
      summary: Get user and profile
      description: Get detail on Users as well as Profile
      parameters:
        - schema:
            type: string
          name: user_id
          in: path
          required: true

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully get profile data
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 1c2c9b33-d237-46fb-b4a8-1f188d1b1276
                      email:
                        type: string
                        example: user@user.com
                      name:
                        type: string
                        example: User
                      is_verified:
                        type: boolean
                        example: true
                      role:
                        type: string
                        example: USER
                      profile:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 8cf9bb7f-be36-4941-b4bb-f198d63c194c
                          address:
                            type: string
                            example: Jalan user
                          phone:
                            type: string
                            example: "123456789"
                          occupation:
                            type: string
                            example: USER
                          birthdate:
                            type: string
                            format: datetime
                            example: "2010-10-10T00:00:00.000Z"
                          createdAt:
                            type: string
                            format: datetime
                            example: "2024-05-24T07:41:31.421Z"
                          updatedAt:
                            type: string
                            format: datetime
                            example: "2024-05-24T12:35:54.760Z"

        404:
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Profile not found
                  data:
                    example: ~

      security:
      - bearerAuth: []

    put:
      tags:
        - "Profile"
      summary: Edit Profile
      description: Endpoint for Edit Profile
      parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: User
                address:
                  type: string
                  example: "Jalan user"
                phone:
                  type: string
                  example: "123456789"
                occupation:
                  type: string
                  example: "USER"
                birthdate:
                  type: string
                  example: "2010-10-10"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully edited profile data
                  data:
                    example: ~
        
        403:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: You are not authorized to edit this profile
                  data:
                    example: ~

        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Profile not found for this user
                  data:
                    example: ~

        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    anyOf:
                      - type: string
                        example: Failed to update profile
                      - type: string
                        example: Failed to update user name
                  data:
                    example: ~


      security:
      - bearerAuth: []

  /notification/{user_id}:
    get:
      tags:
        - "Notification"
      summary: GET Notification
      description: To GET All Notification for User, specified by User_id
      parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Get notifications successfull.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 25085ba9-d2c7-48db-9d30-7ea5b2e816e8
                        title:
                          type: string
                          example: Verify Email
                        message:
                          type: string
                          example: Verify Email Sukses
                        is_read:
                          type: boolean
                          example: false
                        user_id:
                          type: string
                          example: a234a6df-7b0d-4971-8f8a-f00f221f72f1
                        createdAt:
                          type: string
                          example: "2024-05-26T08:32:39.321Z"
                        updatedAt:
                          type: string
                          example: "2024-05-26T08:34:21.521Z"

        404:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Notifications not found.
                  data:
                    example: ~

  /notification/{user_id}/read:
    get:
      tags:
        - "Notification"
      summary: Read Notification
      description: to make all notification (specified by User_id) read
      parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Notification marked as read
                  data:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 2

  /tax:
    get:
      tags:
        - "Tax"
      summary: Get Tax
      description: Get Taxes

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Get tax successfull.
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      percent:
                        type: integer
                        example: 5
                      createdAt:
                        type: string
                        example: "2024-05-26T08:31:58.054Z"
                      updatedAt:
                        type: string
                        example: "2024-05-26T08:31:58.054Z"

  /category:
    get:
      tags:
        - "Category"
      summary: Get all Category
      description: Get All Category exist in Database

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully retrieved categories data
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 4ba4e269-1b22-4a07-977a-beb4870d4d00
                        type:
                          type: string
                          example: adult
                        discount:
                          type: integer
                          example: 0
                        createdAt:
                          type: string
                          example: "2024-05-26T08:31:58.007Z"
                        updatedAt:
                          type: string
                          example: "2024-05-26T08:31:58.007Z"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT